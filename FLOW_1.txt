[{"id":"79174886.5f53f8","type":"serial in","z":"a93e0e48.5bc0a","name":"","serial":"cb4f2635.a78938","x":120,"y":140,"wires":[["aa863444.aec268","afcf5314.04c27"]]},{"id":"d2928544.33e488","type":"serial out","z":"a93e0e48.5bc0a","name":"","serial":"cb4f2635.a78938","x":530,"y":80,"wires":[]},{"id":"aa863444.aec268","type":"function","z":"a93e0e48.5bc0a","name":" GSM M590E","func":"/*\nGSM M590E Function\n\nWriten By: Lee Bolton\nDate: 24/01/2018\n\nThis function is using the default settings on your GSM Module\n\n\n*** Serial Settings ***\n\nConnection:\n\nBaud Rate: 115200\nData Bits: 8\nParity: None\nStop Bits: 1\n\nInput:\n\nSplit Input: after timeout of, 500ms\nAnd Deliver: ascii strings\n\n***********************\n\nReplace YOUR_NUMBER_HERE with the phone number you want the text to go to (in international format)\nie. +447890112233\nso replace the zero at the begining of your destination number with +44 \n+44 is the code for United Kingdom\n+61 is the code for Australia\n+1 United States of America\netc...\n\nRespond is set to ON so it replys when you send it a message to let you know it has done what you asked\nDebug_Outbound is set to OFF, set to ON if you are having problems.\n*/\nglobal.set(\"Phone_Number\",\"YOUR_NUMBER_HERE\");\nglobal.set(\"Respond\",\"ON\");\nglobal.set(\"Debug_Outbound\",\"OFF\");\nvar words = msg.payload.split(\" \");\nvar serial_word = words[0].split(\"+\");\nvar inbound = serial_word[1];\n\nif (global.get(\"recive_init\") === undefined && inbound ==\"SMSFLAG:\"){\n    global.set(\"message\",\"inbound\");\n    global.set(\"recive_init\",\"1\");\n    //code here for reciving text\n    msg = {payload:\"AT+CMGR=1\\r\"};\n    msg2 = {payload:\"Message Recived\"};\n    return [msg,null,msg2];\n}\n\nif (global.get(\"message\") == \"inbound\" && words[1] == \"\\\"REC\"){\n    msg = {payload:\"Prossesing Message\"};\n    node.send([null,null,msg]);\n    GSM_Validate_Number = global.get(\"Phone_Number\").split(\"+\");\n    GSM_Incoming_Number = words[2].split(\"\\\"\");\n    GSM_Incoming_Command = words[2].split(\"\\\"\");\n    if (GSM_Validate_Number[1] == GSM_Incoming_Number[2]){\n        GSM_Topic = GSM_Incoming_Command[7].split(\"\\r\\n\");\n        GSM_Payload = words[3].split(\"\\r\\n\");\n        msg.topic = GSM_Topic[1];\n        msg.payload = GSM_Payload[0];\n        msg2.payload = \"MQTT:\"+GSM_Topic[1]+\":\"+GSM_Payload[0];\n        node.send([null,msg,msg2]);\n        msg = {payload:\"AT+CMGD=1,4\\r\"};\n        node.send([msg,null,null]);\n    }\n    else{\n        msg = {payload:\"Number Did Not Match\"};\n        node.send([null,null,msg]);\n        msg = {payload:\"Incoming:\"+GSM_Incoming_Number[1]};\n        node.send([null,null,msg]);\n        msg = {payload:\"AT+CMGD=1,4\\r\"};\n        node.send([msg,null,null]);\n    }\n    global.set(\"GSM_Inbound_Compleat\",\"OK\");\n    \n    return null;\n}\n\nif((global.get(\"message\") == \"outbound\" | global.get(\"message\") === undefined) && global.get(\"send_init\") === undefined){\n    global.set(\"message\",\"outbound\");\n    global.set(\"message_holder\",msg.payload);\n    global.set(\"send_init\",\"1\");\n    msg={payload:\"AT+CMGF=1\\r\"};\n    msg2={payload:\"Sending Message\"};\n    return [msg,null,msg2];\n}\n\nif (global.get(\"message\") == \"outbound\" && global.get(\"send_init\") == \"1\"){\n    var array = msg.payload.split(\"\\r\\n\");\n    var array0 = array[0];\n    var array1 = array[1];\n    var array2 = array[2];\n    \n    if (global.get(\"Debug_Outbound\") == \"ON\"){\n        debug_ar0 = {payload:\"array0:\"+array0};\n        debug_ar1 = {payload:\"array1:\"+array1};\n        debug_ar2 = {payload:\"array2:\"+array2};\n        node.send([null,null,debug_ar0]);\n        node.send([null,null,debug_ar1]);\n        node.send([null,null,debug_ar2]);\n    }\n    \n    if (array0 == \"AT+CMGF=1\\r\" && array1 == \"OK\")\n    {\n        var msg = {payload:\"AT+CSCS=\\\"GSM\\\"\\r\"};\n        return msg;\n    }\n    if (array0 == \"AT+CSCS=\\\"GSM\\\"\\r\" && array1 == \"OK\")\n    {\n        msg = {payload:\"AT+CMGS=\\\"\"+global.get(\"Phone_Number\")+\"\\\"\\r\"};\n        return msg;\n    }\n    if (array0 == \"AT+CMGS=\\\"\"+global.get(\"Phone_Number\")+\"\\\"\\r\" && array1 ==\"> \")\n    {\n        msg={payload:global.get(\"message_holder\")+\"\\x1A\"};\n        return msg;\n    }\n    if (array0 === \"\" && array2 == \"OK\")\n    {\n        msg = {payload:global.get(\"message_holder\")+\" Sent OK\"};\n        global.set(\"message\", undefined);\n        global.set(\"send_init\", undefined);\n        return [ null, null, msg];\n    }\n    else if (array0 === \"\" && array1 == \"ERROR\")//set timer to initiate resending of message\n    {\n        msg={payload:\"AT+CMGF=1\\r\"};\n        msg2={payload:\"Retrying To Send Message\"};\n        setTimeout(function(){\n            node.send([msg,null,msg2]);\n        }, 5000);\n    }\n}\nif (global.get(\"GSM_Inbound_Compleat\")==\"OK\"){\n    finalise = words[0].split(\"\\r\\n\");\n    if (finalise[1] == \"OK\"){\n        global.set(\"recive_init\",undefined);\n        global.set(\"message\",\"outbound\");\n        global.set(\"GSM_Inbound_Compleat\",undefined);\n        msg = {payload:\"Finished\"};\n        node.send([null,null,msg]);\n    }\n    if (global.get(\"Respond\") == \"ON\"){\n        global.set(\"message\",\"outbound\");\n        global.set(\"message_holder\",GSM_Topic[1]+\":\"+GSM_Payload[0]+ \" OK\");\n        global.set(\"send_init\",\"1\");\n        msg={payload:\"AT+CMGF=1\\r\"};\n        msg2={payload:\"Sending Acknowledgement\"};\n        return [msg,null,msg2];\n    }\n}\n\n","outputs":"3","noerr":0,"x":340,"y":140,"wires":[["d2928544.33e488","3f2339ab.1bc906"],["1ad230ff.c65ccf","486a1bbd.2a55d4"],["c8f14d85.f4558"]],"inputLabels":["Serial In"],"outputLabels":["Serial Out","MQTT Out","UI Out"]},{"id":"1ad230ff.c65ccf","type":"mqtt out","z":"a93e0e48.5bc0a","name":"","topic":"","qos":"","retain":"","broker":"bfb4992a.afb928","x":530,"y":140,"wires":[]},{"id":"c8f14d85.f4558","type":"debug","z":"a93e0e48.5bc0a","name":"console out","active":true,"console":"false","complete":"payload","x":550,"y":240,"wires":[]},{"id":"15eb34e1.74254b","type":"inject","z":"a93e0e48.5bc0a","name":"","topic":"","payload":"Test Message","payloadType":"str","repeat":"","crontab":"","once":false,"x":110,"y":80,"wires":[["aa863444.aec268"]]},{"id":"3f2339ab.1bc906","type":"debug","z":"a93e0e48.5bc0a","name":"","active":false,"console":"false","complete":"false","x":540,"y":40,"wires":[]},{"id":"afcf5314.04c27","type":"debug","z":"a93e0e48.5bc0a","name":"","active":false,"console":"false","complete":"false","x":130,"y":220,"wires":[]},{"id":"486a1bbd.2a55d4","type":"debug","z":"a93e0e48.5bc0a","name":"","active":false,"console":"false","complete":"false","x":550,"y":200,"wires":[]},{"id":"867165fd.b369c8","type":"function","z":"a93e0e48.5bc0a","name":"GSM RESET","func":"//reset inbound\nglobal.set(\"recive_init\",undefined);\nglobal.set(\"GSM_Inbound_Compleat\",undefined);\n\n//reset outbound\nglobal.set(\"message\", undefined);\nglobal.set(\"send_init\", undefined);\nreturn null;","outputs":1,"noerr":0,"x":330,"y":280,"wires":[[]]},{"id":"6df29e60.37b92","type":"inject","z":"a93e0e48.5bc0a","name":"RESET","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":110,"y":280,"wires":[["867165fd.b369c8"]]},{"id":"cb4f2635.a78938","type":"serial-port","z":"","serialport":"/dev/ttyS0","serialbaud":"115200","databits":"8","parity":"none","stopbits":"1","newline":"500","bin":"false","out":"time","addchar":false},{"id":"bfb4992a.afb928","type":"mqtt-broker","z":"","broker":"192.168.1.202","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""}]