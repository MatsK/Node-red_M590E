[{"id":"3f7e6b07.7e34a4","type":"function","z":"c736b2df.4697d","name":" GSM M590E","func":"/*\nGSM M590E Function\n\nWriten By: Lee Bolton\nDate: 24/01/2018\n\nThis function is using the default settings on your GSM Module\n\n\n*** Serial Settings ***\n\nConnection:\n\nBaud Rate: 115200\nData Bits: 8\nParity: None\nStop Bits: 1\n\nInput:\n\nSplit Input: after timeout of, 500ms\nAnd Deliver: ascii strings\n\n***********************\n\nReplace YOUR_NUMBER_HERE with the phone number you want the text to go to (in international format)\nie. +447890112233\nso replace the zero at the begining of your destination number with +44 \n+44 is the code for United Kingdom\n+61 is the code for Australia\n+1 United States of America\netc...\n\nRespond is set to ON so it replys when you send it a message to let you know it has done what you asked\nDebug_Outbound is set to OFF, set to ON if you are having problems.\n*/\nglobal.set(\"Phone_Number\",\"YOUR_NUMBER_HERE\");\nglobal.set(\"Respond\",\"ON\");\nglobal.set(\"Debug_Outbound\",\"OFF\");\nvar words = msg.payload.split(\" \");\nvar serial_word = words[0].split(\"+\");\nvar inbound = serial_word[1];\n\nif (global.get(\"recive_init\") === undefined && inbound ==\"SMSFLAG:\"){\n    //msg = {payload:\"Message :\"+words[2]};\n    //node.send([null,null,msg]);\n    //if (words[2] ==\"1\\r\\n\")\n    //msg = {payload:\"Message \"+words[2]+\" OK\"};\n   // node.send([null,null,msg]);\n    \n    global.set(\"message\",\"inbound\");\n    global.set(\"recive_init\",\"1\");\n    //code here for reciving text\n    MSG_NO = words[2].split(\"\\r\\n\");\n    msg = {payload:\"AT+CMGR=\"+MSG_NO[0]+\"\\r\"};\n    msg2 = {payload:\"Message Recived\"};\n    return [msg,null,msg2];\n}\n\nif (global.get(\"message\") == \"inbound\" && words[1] == \"\\\"REC\"){\n    msg = {payload:\"Prossesing Message\"};\n    node.send([null,null,msg]);\n    GSM_Validate_Number = global.get(\"Phone_Number\").split(\"+\");\n    GSM_Incoming_Number = words[2].split(\"\\\"\");\n    GSM_Incoming_Command = words[2].split(\"\\\"\");\n    if (GSM_Validate_Number[1] == GSM_Incoming_Number[2]){\n        GSM_Topic = GSM_Incoming_Command[7].split(\"\\r\\n\");\n        GSM_Payload = words[3].split(\"\\r\\n\");\n        msg.topic = GSM_Topic[1];\n        msg.payload = GSM_Payload[0];\n        msg2.payload = \"MQTT:\"+GSM_Topic[1]+\":\"+GSM_Payload[0];\n        node.send([null,msg,msg2]);\n        msg = {payload:\"AT+CMGD=1,4\\r\"};\n        node.send([msg,null,null]);\n    }\n    else{\n        msg = {payload:\"Number Did Not Match\"};\n        node.send([null,null,msg]);\n        msg = {payload:\"Incoming:\"+GSM_Incoming_Number[1]};\n        node.send([null,null,msg]);\n        msg = {payload:\"AT+CMGD=1,4\\r\"};\n        node.send([msg,null,null]);\n        global.set(\"WRONG_NUMBER\",\"YES\");\n    }\n    global.set(\"GSM_Inbound_Compleat\",\"OK\");\n    \n    return null;\n}\n\nif((global.get(\"message\") == \"outbound\" | global.get(\"message\") === undefined) && global.get(\"send_init\") === undefined){\n    global.set(\"message\",\"outbound\");\n    global.set(\"message_holder\",msg.payload);\n    global.set(\"send_init\",\"1\");\n    msg={payload:\"AT+CMGF=1\\r\"};\n    msg2={payload:\"Sending Message\"};\n    return [msg,null,msg2];\n}\n\nif (global.get(\"message\") == \"outbound\" && global.get(\"send_init\") == \"1\"){\n    var array = msg.payload.split(\"\\r\\n\");\n    var array0 = array[0];\n    var array1 = array[1];\n    var array2 = array[2];\n    \n    if (global.get(\"Debug_Outbound\") == \"ON\"){\n        debug_ar0 = {payload:\"array0:\"+array0};\n        debug_ar1 = {payload:\"array1:\"+array1};\n        debug_ar2 = {payload:\"array2:\"+array2};\n        node.send([null,null,debug_ar0]);\n        node.send([null,null,debug_ar1]);\n        node.send([null,null,debug_ar2]);\n    }\n    \n    if (array0 == \"AT+CMGF=1\\r\" && array1 == \"OK\")\n    {\n        var msg = {payload:\"AT+CSCS=\\\"GSM\\\"\\r\"};\n        return msg;\n    }\n    if (array0 == \"AT+CSCS=\\\"GSM\\\"\\r\" && array1 == \"OK\")\n    {\n        msg = {payload:\"AT+CMGS=\\\"\"+global.get(\"Phone_Number\")+\"\\\"\\r\"};\n        return msg;\n    }\n    if (array0 == \"AT+CMGS=\\\"\"+global.get(\"Phone_Number\")+\"\\\"\\r\" && array1 ==\"> \")\n    {\n        msg={payload:global.get(\"message_holder\")+\"\\x1A\"};\n        return msg;\n    }\n    if (array0 === \"\" && array2 == \"OK\")\n    {\n        msg = {payload:global.get(\"message_holder\")+\" Sent OK\"};\n        global.set(\"message\", undefined);\n        global.set(\"send_init\", undefined);\n        return [ null, null, msg];\n    }\n    else if (array0 === \"\" && array1 == \"ERROR\")//set timer to initiate resending of message\n    {\n        msg={payload:\"AT+CMGF=1\\r\"};\n        msg2={payload:\"Retrying To Send Message\"};\n        setTimeout(function(){\n            node.send([msg,null,msg2]);\n        }, 5000);\n    }\n}\nif (global.get(\"GSM_Inbound_Compleat\")==\"OK\"){\n    finalise = words[0].split(\"\\r\\n\");\n    if (finalise[0] == \"AT+CMGD=1,4\\r\" && finalise[1] == \"OK\"){\n        global.set(\"recive_init\",undefined);\n        global.set(\"message\",\"outbound\");\n        global.set(\"GSM_Inbound_Compleat\",undefined);\n        msg = {payload:\"Finished\"};\n        node.send([null,null,msg]);\n    }\n    if (global.get(\"Respond\") == \"ON\" && global.get(\"WRONG_NUMBER\") == undefined){\n        global.set(\"message\",\"outbound\");\n        global.set(\"message_holder\",GSM_Topic[1]+\":\"+GSM_Payload[0]+ \" OK\");\n        global.set(\"send_init\",\"1\");\n        msg={payload:\"AT+CMGF=1\\r\"};\n        msg2={payload:\"Sending Acknowledgement\"};\n        return [msg,null,msg2];\n    }\n    else{\n        global.set(\"WRONG_NUMBER\",undefined);\n    }\n}\n\n","outputs":"3","noerr":0,"x":380,"y":200,"wires":[["299ae9e1.ddb266","9700fe47.4e6cd"],["8ac4ee81.6d531","203e02da.bfa8de"],["67456d97.8d8504"]],"inputLabels":["Serial In"],"outputLabels":["Serial Out","MQTT Out","UI Out"]}]